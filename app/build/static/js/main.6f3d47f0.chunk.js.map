{"version":3,"sources":["services/blogs.js","components/Blog.js","services/login.js","components/Notification.js","components/Togglable.js","components/InputField.js","components/LoginForm.js","components/BlogForm.js","App.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","create","newBlog","config","headers","Authorization","post","setToken","newToken","addLike","blog","put","id","remove","delete","Blog","removeBlog","useState","showDetails","setShowDetails","likes","setLikes","handleLikes","blogService","className","title","author","onClick","url","data-likes","user","username","login","credentials","Notification","message","error","Togglable","forwardRef","ref","buttonLabel","children","visible","setVisible","showWhenVisible","display","hideWhenVisible","toggleVisibility","useImperativeHandle","style","displayName","InputField","type","value","handleChange","htmlFor","name","onChange","LoginForm","userLogin","setUsername","password","setPassword","onSubmit","e","preventDefault","target","BlogForm","addBlog","setTitle","setAuthor","setUrl","togglableRef","useRef","current","App","blogs","setBlogs","setUser","notification","setNotification","succeed","setSucceed","useEffect","then","loggedUser","window","localStorage","getItem","JSON","parse","userObject","loginService","setItem","stringify","setTimeout","blogObject","responseBlog","concat","confirm","blogIndex","findIndex","newBlogList","splice","removeItem","sort","b","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f3d47f0.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `Bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async (newBlog) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newBlog, config)\n  return response.data\n}\n\nconst addLike = async (blog) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.put(`${baseUrl}/${blog.id}`, blog, config)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\nexport default { getAll, create, setToken, addLike, remove }\n","import { useState } from 'react'\nimport blogService from '../services/blogs'\nimport PropTypes from 'prop-types'\n\nconst Blog = ({ blog, removeBlog }) => {\n  const [showDetails, setShowDetails] = useState(false)\n  const [likes, setLikes] = useState(blog.likes)\n  const toggleDetails = () => setShowDetails(!showDetails)\n\n  const handleLikes = async (id) => {\n    await blogService.addLike({ likes: likes + 1, id })\n    setLikes(likes + 1)\n  }\n\n  return (\n    <div className='blog'>\n      <p>\n        <strong>{blog.title}</strong>, by <em>{blog.author}</em>\n      </p>\n      <button onClick={toggleDetails} className='showMore'>{showDetails ? 'hide' : 'view'}</button>\n      {\n        showDetails\n          ? (\n            <>\n              <p>{blog.url}</p>\n              <p>likes: <span data-likes>{likes}</span> <button onClick={() => handleLikes(blog.id)}>like</button></p>\n              <p>{blog.user.username}</p>\n              <div>\n                <button onClick={() => removeBlog(blog)}>remove</button>\n              </div>\n            </>\n            )\n          : ''\n      }\n    </div>\n  )\n}\n\nBlog.propTypes = {\n  removeBlog: PropTypes.func.isRequired,\n  blog: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    url: PropTypes.string,\n    likes: PropTypes.number.isRequired\n  })\n}\n\nexport default Blog\n","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","const Notification = ({ message, error }) => {\n  return <div className={error ? 'error' : 'succeed'}>{message}</div>\n}\n\nexport default Notification\n","import { useState, useImperativeHandle, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = forwardRef(({ buttonLabel, children }, ref) => {\n  const [visible, setVisible] = useState(true)\n\n  const showWhenVisible = { display: visible ? 'none' : '' }\n  const hideWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className='togglableContent'>\n        {children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </>\n  )\n})\n\nTogglable.displayName = 'Togglable'\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable\n","export default function InputField ({ id, type, value, handleChange }) {\n  return (\n    <div>\n      <label htmlFor={id}>{id}:</label>\n      <input\n        id={id}\n        name={id}\n        type={type}\n        value={value}\n        onChange={handleChange}\n      />\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport Togglable from '../components/Togglable'\nimport InputField from './InputField'\n\nexport default function LoginForm ({ userLogin }) {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleUsernameChange = (e) => setUsername(e.target.value)\n  const handlePasswordChange = (e) => setPassword(e.target.value)\n\n  const handleLogin = (e) => {\n    e.preventDefault()\n    const user = { username, password }\n    userLogin(user)\n    setUsername('')\n    setPassword('')\n  }\n\n  return (\n    <Togglable\n      buttonLabel='login'\n    >\n      <form onSubmit={handleLogin}>\n        <InputField\n          id='username'\n          type='text'\n          value={username}\n          handleChange={handleUsernameChange}\n        />\n        <InputField\n          type='password'\n          value={password}\n          id='password'\n          handleChange={handlePasswordChange}\n        />\n        <button type='submit'>Login</button>\n      </form>\n    </Togglable>\n  )\n}\n","import { useState, useRef } from 'react'\nimport Togglable from './Togglable'\nimport InputField from './InputField'\n\nexport default function BlogForm ({ addBlog }) {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const togglableRef = useRef()\n\n  const handleTitleChange = (e) => setTitle(e.target.value)\n  const handleAuthorChange = (e) => setAuthor(e.target.value)\n  const handleUrlChange = (e) => setUrl(e.target.value)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const newBlog = {\n      title,\n      author,\n      url\n    }\n    addBlog(newBlog)\n    togglableRef.current.toggleVisibility()\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n  return (\n    <Togglable\n      buttonLabel='add blog'\n      ref={togglableRef}\n    >\n      <form onSubmit={handleSubmit}>\n        <InputField\n          id='title'\n          type='text'\n          value={title}\n          handleChange={handleTitleChange}\n        />\n        <InputField\n          id='author'\n          type='text'\n          value={author}\n          handleChange={handleAuthorChange}\n        />\n        <InputField\n          id='url'\n          type='text'\n          value={url}\n          handleChange={handleUrlChange}\n        />\n        <button type='submit'>Create new blog</button>\n      </form>\n    </Togglable>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState('')\n\n  const [notification, setNotification] = useState('')\n  const [succeed, setSucceed] = useState(true)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUser = window.localStorage.getItem('loggedBlogsApp')\n    if (loggedUser) {\n      const user = JSON.parse(loggedUser)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const userLogin = async (userObject) => {\n    try {\n      const user = await loginService.login(userObject)\n      window.localStorage.setItem('loggedBlogsApp', JSON.stringify(user))\n      blogService.setToken(user.token)\n      setSucceed(true)\n      setNotification(`Logging as ${user.name}`)\n      setTimeout(() => {\n        setNotification('')\n      }, 3000)\n      setUser(user)\n    } catch (e) {\n      setNotification('Wrong credentials')\n      setSucceed(false)\n      setTimeout(() => {\n        setNotification('')\n        setSucceed(true)\n      }, 3000)\n    }\n  }\n\n  const addBlog = async (blogObject) => {\n    try {\n      const responseBlog = await blogService.create(blogObject)\n      setBlogs(blogs.concat(responseBlog))\n      setNotification(`a new blog \"${responseBlog.title}\", by ${responseBlog.author} added to the db`)\n      setSucceed(true)\n      setTimeout(() => {\n        setNotification('')\n      }, 3000)\n    } catch (e) {\n      setNotification(e.message)\n      setSucceed(false)\n      setTimeout(() => {\n        setNotification('')\n        setSucceed(true)\n      }, 3000)\n    }\n  }\n\n  const removeBlog = async (blogObject) => {\n    const confirm = window.confirm(`Do your really want to delete ${blogObject.title} by ${blogObject.author}?`)\n    if (!confirm) return\n\n    try {\n      await blogService.remove(blogObject.id)\n      const blogIndex = blogs.findIndex(blog => blog.id === blogObject.id)\n      const newBlogList = [...blogs]\n      newBlogList.splice(blogIndex, 1)\n\n      setBlogs(newBlogList)\n      setNotification(`\"${blogObject.title}\" by ${blogObject.author} deleted from the db`)\n      setSucceed(true)\n      setTimeout(() => {\n        setNotification('')\n      }, 3000)\n    } catch (e) {\n      setNotification(e.message)\n      setSucceed(false)\n      setTimeout(() => {\n        setNotification('')\n        setSucceed(true)\n      }, 3000)\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBlogsApp')\n    setUser('')\n  }\n\n  return (\n    <div>\n      {\n        notification\n          ? (succeed\n              ? <Notification message={notification} />\n              : <Notification message={notification} error />\n            )\n          : null\n      }\n      <h2>blogs</h2>\n      {\n        user\n          ? <p>{user.name} is logged in <button onClick={handleLogout}>logout</button></p>\n          : <LoginForm\n              userLogin={userLogin}\n            />\n      }\n      <h2>create new</h2>\n\n      <BlogForm\n        addBlog={addBlog}\n      />\n      {[...blogs]\n        .sort((a, b) => b.likes - a.likes)\n        .map(blog =>\n          <Blog\n            key={blog.id}\n            blog={blog}\n            removeBlog={removeBlog}\n          />\n        )}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}